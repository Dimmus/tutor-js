#!/bin/bash

set -e

project_release_branch="release/$1"
project_release_subdirectory="$1/dist"

current_branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')

if [ `git branch --list $project_release_branch `]
then
  git checkout $project_release_branch
  git pull origin $project_release_branch
  echo 'Branch $project_release_branch already exists.'
else
  git checkout -b $project_release_branch
  sed -i '' '/dist/d' .gitignore
  git add .gitignore
  git commit -m 'allow dist files'
  echo 'Branch $project_release_branch created.'
fi

git merge $current_branch -m "merge $current_branch in prep for release"

npm install

bin/build "$@"

git add $project_release_subdirectory

read -p 'Please enter a commit message: ' commit_message
git commit -m "$commit_message"
git subtree push --prefix $project_release_subdirectory origin $project_release_branch

read -p 'Please enter a tag name:' release_tag_name
git tag -a $release_tag_name -m "$commit_message"
git subtree push --prefix $project_release_subdirectory origin $release_tag_name

git checkout $current_branch

