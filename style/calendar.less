
@import '../node_modules/bootstrap/less/bootstrap.less';
@import '../bower_components/bootstrap-material-design/less/material-wfont.less';

// Sample bootstrap theme for react-calendar
// @import '../node_modules/react-calendar/less/bootstrap-theme.less';


// TODO make this a mixin for flexible calendaringggg

@calendar-cell-width: 14.28%;
@calendar-cell-height: 10rem;

@reading-color: @brand-success;
@homework-color: @primary;
@exercise-color: @brand-info;
@essay-color: @brand-warning;
@interactive-color: @brand-danger;

@progress-bar-width: 100%;



body.modal-open {
  overflow: auto;
}

.x-plan(@plan-color) {
  background: fade(@plan-color, 20%);
  border-color: @plan-color;

  &:hover,
  &.active,
  &.open {
    background: fade(@plan-color, 75%);
  }
}

.x-plan-modal(@plan-color) {
  .modal-content {
    .modal-header {
      color: @plan-color;
      background: fade(@plan-color, 20%);
    }
  }

  .btn:not(.btn-link):not(.btn-flat) {
    border: 1px solid @plan-color;
    color: @plan-color;
  }
}

.calendar-cell(@cell-width) {
  display: inline-block;
  width: @cell-width;
  height: inherit;
  padding: 5px;
  text-align: center;
}

.stopselect() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.bootstrap-column-padding-override() {
  // Overriding bootstrap's tricks for nice column floating.
  // To help with calendar plans width rendering.  May be useful elsewhere.  Be careful when using --
  // removes padding of columns.
  .row {
    margin-left: 0;
    margin-right: 0;
  }
  [class^="col-"] {
    padding-left: 0;
    padding-right: 0;
  }
}

.list-courses {

  .calendar-container{
    .bootstrap-column-padding-override();
  }

  .calendar-header {
    text-align: center;
    font-size: 3rem;

    &-label {
      font-weight: stronger;
    }

    &-control {
      .stopselect();
      display: block;
      width: 100%;

      &:hover {
        background: @gray-lighter;
        text-decoration: none;
      }
      &:active, &:visited {
        text-decoration: none;
      }
    }
  }

  .rc {
    &-Calendar {
      width: 100%;
      &-header {
        width: 100%;
        text-align: center;
        font-weight: bolder;
      }
    }
    &-Month {
      width: 100%;
      display: inline-block;
      vertical-align: top;
      position: relative;

      &-weekdays {
        width: 100%;
        &-weekday {
          .calendar-cell(@calendar-cell-width);
          height: 2rem;
          font-weight: bolder;
        }
      }
      &--current {
        .rc-Month-header {
          color: @primary;
        }
      }
    }
    &-Week {
      width: 100%;

      // Note: property below subject to change based on data
      // See CALENDAR_DAY_DYNAMIC_HEIGHT in CourseMonth component
      height: @calendar-cell-height;

      &-number {
        color: @gray-light;
        .calendar-cell(@calendar-cell-width);
      }
      &-days {
        width: 100%;
        height: inherit;
        border-left: 1px solid @gray-lighter;
        border-top: 1px solid @gray-lighter;
        display: inline-block;
      }
      &:last-child {
        .rc-Week-days {
          border-bottom: 1px solid @gray-lighter;
        }
      }
    }
    &-Day {
      .calendar-cell(@calendar-cell-width);
      border-right: 1px solid @gray-lighter;
      position: relative;

      &--upcoming {
        cursor: pointer;
        &:after{
          content: '+';
          font-size: 2rem;
          position: absolute;
          bottom: 0;
          right: 0.5rem;
          color: @gray-light;
          opacity: 0;
        }

        &:hover, &.active {
          background-color: fade(@primary, 10%);
          &:after{
            opacity: 1;
          }
        }
      }

      &--outside {
        cursor: default;
        color: @gray-lighter;
        &:hover {
          background-color: transparent;
        }

        &:after{
          display: none;
        }
      }

      &--current {
        background-color: @primary;
      }
    }
  }

  .plans {
    position: absolute;
    left: 0;
    z-index: 20;
    width: 100%;
    overflow: hidden;
    box-sizing: border-box;
    // CALENDAR_EVENT_DYNAMIC_POSITION
    // Offset from top based on what week the event is in.
    // See CoursePlansByWeek component
  }

  .plan {
    display: block;
    position: relative;
    border: 1px solid @gray-light;
    font-size: 1.25rem;
    height: 2rem;
    line-height: 2rem;
    margin-top: 0.5rem;
    cursor: pointer;
    border-radius: 4px;
    font-weight: bold;
    transition: background .1s ease-in;
    overflow: hidden;
    // takes on CALENDAR_EVENT_DYNAMIC_WIDTH and CALENDAR_EVENT_DYNAMIC_POSITION
    // Based on event duration and event offset from start of week
    // see CoursePlan component

    &.reading      { .x-plan(@reading-color); }
    &.exercise     { .x-plan(@exercise-color); }
    &.essay        { .x-plan(@essay-color); }
    &.homework     { .x-plan(@homework-color); }
    &.interactive  { .x-plan(@interactive-color); }


    // CALENDAR_EVENT_LABEL_DYNAMIC_WIDTH
    // Takes width based on visible width of plan to center label.
    // see CoursePlan component
    label {
      text-align: center;
      display: block;
      margin-bottom: 0;
      cursor: pointer;
    }
  }
}


.plan-modal {

  &.reading-modal      { .x-plan-modal(@reading-color); }
  &.exercise-modal     { .x-plan-modal(@exercise-color); }
  &.essay-modal        { .x-plan-modal(@essay-color); }
  &.homework-modal     { .x-plan-modal(@homework-color); }
  &.interactive-modal  { .x-plan-modal(@interactive-color); }

  .modal-content {
    .modal-header { padding-bottom: 10px; }
    .modal-body {
      > :first-child { margin-top: 0; }

      .reading-stats {
        section {
          > div {
            max-width: @progress-bar-width;
          }
        }
      }
    }

    .btn:not(.btn-link):not(.btn-flat) {
      margin-top: 0;
      margin-bottom: 0;
    }
  }

  .panel {
    margin: 0;
    box-shadow: none;

    .panel-body { padding: 0; }
  }


}
